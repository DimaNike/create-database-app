-- Copyright (c) 2024, Oracle and/or its affiliates.
-- All rights reserved
-- Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
-- Generated by ORDS REST Data Services 24.2.3.r2011847
-- Schema: CONCERT_SAMPLE_APP  Date: Mon Aug 26 10:21:35 2024 
--

DECLARE
  l_roles     OWA.VC_ARR;
  l_modules   OWA.VC_ARR;
  l_patterns  OWA.VC_ARR;

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'CONCERT_SAMPLE_APP',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'concert_sample_app',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'concert_app.adminuser.v1',
      p_base_path      => '/adminuser/v1/',
      p_items_per_page => 0,
      p_status         => 'PUBLISHED',
      p_comments       => 'admin user APIs Version 1');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'artists',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => 'Artists resource for admins');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'artists',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
    INSERT INTO ARTISTS(NAME, DESCRIPTION, BIO)
    VALUES (:name, :description, :bio)
    RETURNING ARTIST_ID INTO :artist_id;
    :status_code:= 201;
    :pv_result := ''Artists Added'';
    :pn_status := ''SUCCESS'';
    EXCEPTION 
        WHEN OTHERS THEN 
        :status_code:= 400;
        :artist_id := -1;
        :pv_result := ''UNABLE TO ADD ARTIST'' || SQLERRM;
        :pn_status := ''ERROR'';
    END;
        ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'POST',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'POST',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'POST',
      p_name               => 'OBJECT_ID',
      p_bind_variable_name => 'artist_id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => 'The artist id of the created artist');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'POST',
      p_name               => 'NAME',
      p_bind_variable_name => 'name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'artist_name');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'POST',
      p_name               => 'DESCRIPTION',
      p_bind_variable_name => 'description',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'artist bio');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'POST',
      p_name               => 'BIO',
      p_bind_variable_name => 'bio',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'artist bio');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'artists',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
          UPDATE ARTISTS A
          SET NAME = nvl(:name, A.NAME), BIO = nvl(:bio, A.BIO)
          WHERE A.ARTIST_ID = :id;
          :status_code:= 201;
          :pv_result := ''Artists Updated'';
          :pn_status := ''SUCCESS'';
          EXCEPTION 
              WHEN OTHERS THEN 
              :status_code:= 400;
              :pv_result := ''UNABLE TO UPDATE ARTIST'' || SQLERRM;
              :pn_status := ''ERROR'';
          END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'PUT',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'PUT',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'PUT',
      p_name               => 'ARTIST_ID',
      p_bind_variable_name => 'artist_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'artist_id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'PUT',
      p_name               => 'ARTIST_NAME ',
      p_bind_variable_name => 'artist_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'artist_name');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'PUT',
      p_name               => 'BIO',
      p_bind_variable_name => 'bio',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'artist bio');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'artists',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      DELETE FROM ARTISTS
      WHERE ARTIST_ID = :id;

      IF SQL%ROWCOUNT = 0 THEN
          :status_code:= 404;
          :pv_result := ''Invalid artist id'';
          :pn_status := ''NO_MATCH'';
      ELSE
          :status_code:= 200;
          :pv_result := ''Artist Deleted'';
          :pn_status := ''SUCCESS'';
      END IF;

      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO DELETE ARTIST'' || SQLERRM;
          :pn_status := ''ERROR'';
    END;
        ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'DELETE',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'DELETE',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'artists',
      p_method             => 'DELETE',
      p_name               => 'ARTIST_ID',
      p_bind_variable_name => 'artist_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'artist_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'venues',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => 'Venues resource for admins');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'venues',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      INSERT INTO VENUES(NAME, LOCATION, CITY_ID)
      VALUES (:name, :location, :city_id)
      RETURNING VENUE_ID INTO :venue_id; 
      :status_code:= 201;
      :pv_result := ''Venue Added'';
      :pn_status := ''SUCCESS'';
      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO ADD VENUE'' || SQLERRM;
          :pn_status := ''ERROR'';
      END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'POST',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'POST',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'POST',
      p_name               => 'OBJECT_ID',
      p_bind_variable_name => 'venue_id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => 'The venue id of the created venue.');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'POST',
      p_name               => 'VENUE_NAME ',
      p_bind_variable_name => 'name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'name of the venue');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'POST',
      p_name               => 'VENUE_LOCATION ',
      p_bind_variable_name => 'location',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'venue location');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'POST',
      p_name               => 'CITY_ID ',
      p_bind_variable_name => 'city_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'City ID of the venue.');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'venues',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      UPDATE VENUES V
      SET NAME = nvl(:name, V.NAME), LOCATION = nvl(:location, V.LOCATION)
      WHERE V.ID = :id;
      :status_code:= 201;
      :pv_result := ''VENUE Updated'';
      :pn_status := ''SUCCESS'';
      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO UPDATE VENUE'' || SQLERRM;
          :pn_status := ''ERROR'';
      END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'PUT',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'PUT',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'PUT',
      p_name               => 'VENUE_ID ',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'venue id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'PUT',
      p_name               => 'VENUE_NAME ',
      p_bind_variable_name => 'name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'name of the venue');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'PUT',
      p_name               => 'VENUE_LOCATION ',
      p_bind_variable_name => 'location',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'venue location');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'venues',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      DELETE FROM VENUES
      WHERE VENUE_ID = :id;

      IF SQL%ROWCOUNT = 0 THEN
          :status_code:= 404;
          :pv_result := ''Invalid venue id'';
          :pn_status := ''NO_MATCH'';
      ELSE
          :status_code:= 200;
          :pv_result := ''Venue Deleted'';
          :pn_status := ''SUCCESS'';
      END IF;

      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO DELETE ARTIST'' || SQLERRM;
          :pn_status := ''ERROR'';
      END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'DELETE',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'DELETE',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'venues',
      p_method             => 'DELETE',
      p_name               => 'VENUE_ID ',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'venue_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'events',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => 'Events resource for admins');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'events',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      INSERT INTO EVENTS(EVENT_DATE, ARTIST_ID, VENUE_ID, EVENT_STATUS_ID, EVENT_DETAILS)
      VALUES (TO_DATE(:e_date, ''YYYY-MM-DD''),
      :artist_id, :venue_id, :event_status_id, :event_details)
      RETURNING EVENT_ID INTO :event_id; 
      :status_code:= 201;
      :pv_result := ''Event Added'';
      :pn_status := ''SUCCESS'';
      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO ADD EVENT'' || SQLERRM;
          :pn_status := ''ERROR'';
      END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'OBJECT_ID',
      p_bind_variable_name => 'event_id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => 'The event id of the created event.');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'EVENT_DATE ',
      p_bind_variable_name => 'e_date',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'date of event');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'ARTIST_ID ',
      p_bind_variable_name => 'artist_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'artist id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'VENUE_ID ',
      p_bind_variable_name => 'venue_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'venue id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'EVENT_STATUS_ID ',
      p_bind_variable_name => 'event_status_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'status of the event');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'POST',
      p_name               => 'EVENT_DETAILS',
      p_bind_variable_name => 'event_details',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'event_details');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'events',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      UPDATE EVENTS E
      SET 
      E_DATE = nvl(TO_DATE(:e_date, ''YYYY-MM-DDTHH:mm:ss.SSSZ''), E.EVENT_DATE), 
      ARTIST_ID = nvl(:artist_id, E.ARTIST_ID),
      VENUE_ID = nvl(:venue_id, E.VENUE_ID),
      EVENT_STATUS_ID = nvl(:event_status_id, E.EVENT_STATUS_ID),
      EVENT_DETAILS = nvl(:event_details, E.EVENT_DETAILS),
      WHERE E.ID = :id;
      :status_code:= 201;
      :pv_result := ''Event Updated'';
      :pn_status := ''SUCCESS'';
      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO UPDATE EVENT'' || SQLERRM;
          :pn_status := ''ERROR'';
      END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'EVENT_ID ',
      p_bind_variable_name => 'event_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'event id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'EVENT_DATE ',
      p_bind_variable_name => 'e_date',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'date of event');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'ARTIST_ID ',
      p_bind_variable_name => 'artist_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'artist id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'VENUE_ID ',
      p_bind_variable_name => 'venue_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'venue id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'EVENT_STATUS_ID ',
      p_bind_variable_name => 'event_status_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => 'status of the event');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'PUT',
      p_name               => 'EVENT_DETAILS',
      p_bind_variable_name => 'event_details',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'event_details');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'concert_app.adminuser.v1',
      p_pattern        => 'events',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_items_per_page => 10,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
      DELETE FROM EVENTS
      WHERE EVENT_ID = :id;

      IF SQL%ROWCOUNT = 0 THEN
          :status_code:= 404;
          :pv_result := ''Invalid event id'';
          :pn_status := ''NO_MATCH'';
      ELSE
          :status_code:= 200;
          :pv_result := ''Event Deleted'';
          :pn_status := ''SUCCESS'';
      END IF;

      EXCEPTION 
          WHEN OTHERS THEN 
          :status_code:= 400;
          :pv_result := ''UNABLE TO DELETE ARTIST'' || SQLERRM;
          :pn_status := ''ERROR'';
      END;
          ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'DELETE',
      p_name               => 'STATUS_CODE',
      p_bind_variable_name => 'pn_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response status');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'DELETE',
      p_name               => 'RESULT_MESSAGE',
      p_bind_variable_name => 'pv_result',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => 'Response message');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'concert_app.adminuser.v1',
      p_pattern            => 'events',
      p_method             => 'DELETE',
      p_name               => 'EVENT_ID ',
      p_bind_variable_name => 'event_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => 'event id');

    
    
  l_modules(1) := 'concert_app.adminuser.v1';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'concert_app_admin',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => 'Admin user privilege',
      p_description    => 'Provides access to the concert app admin endpoints',
      p_comments       => NULL);

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
        
COMMIT;

END;